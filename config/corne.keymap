/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// &mt HOLD TAP

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// --------------------------------------------------------------------------------
// |      |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |      |
// |      |  A  |  S  |  D  |  F  |  G  |   |  Z  |  J   |  K  |  L  |  ;  |      |
// |      |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |      |
//                    | GUI | ALT | SPC |   | ENT | ALT  | FN |
                        bindings = <
   &none &kp Q        &kp W &kp E        &kp R     &kp T              &kp Y         &kp U        &kp I         &kp O   &kp P                &kp none
   &none &mt LSHIFT A &kp S &kp D        &kp F     &kp G              &kp H         &kp J        &kp K         &kp L   &mt RSHIFT SEMI      &kp none
   &none &mt LCTRL  Z &kp X &kp C        &kp V     &kp B              &kp N         &kp M        &kp COMMA     &kp DOT &mt RCTRL  FSLSH     &kp none
                            &mt LGUI TAB &kp LALT  &mt LOWER SPACE    &mt RAISE RET &mt RALT DEL &mt FN BKSP
                        >;
                };
                lower_layer {
// -------------------------------------------------------------------------------
// |      |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |      |
// |      | ESC | BT1 | BT2 | BT3 | BT4 |   | LFT | DWN |  UP | RGT |     |      |
// |      |     | BT5 |BTCLR|     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT | ALT | FN  |
                        bindings = <
   &none  &kp N1         &kp N2       &kp N3       &kp N4       &kp N5          &kp N6   &kp N7   &kp N8   &kp N9    &kp N0     &none
   &none  &mt LSHIFT ESC &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3    &kp LEFT &kp DOWN &kp UP   &kp RIGHT &kp RSHIFT &none
   &none  &kp LCTRL      &bt BT_SEL 4 &bt BT_CLR   &trans       &trans          &trans   &trans   &trans   &trans    &kp RCTRL  &none
                                      &kp LGUI     &kp LALT     &kp SPACE       &kp RET  &kp RALT &kp FN
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |      |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |      |
// |      |  `  |  \" |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |      |
// |      |  ~  |  '  |     |     |     |   |  _  |  +  |  {  |  }  | "|" |      |
//                    | GUI |     | SPC |   | ENT | ALT | FN  |
                        bindings = <
   &none &kp EXCL         &kp AT &kp HASH &kp DLLR &kp PRCNT    &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR      &none
   &none &mt LSHIFT GRAVE &DQT &trans   &trans   &trans         &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &mt RSHIFT BSLH &none
   &none &mt LCTRL  TILDE &SQT &trans   &trans   &trans         &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &mt RCTRL  PIPE &none
                               &kp LGUI &kp LALT &kp SPACE      &kp RET   &kp RALT  &kp FN
                        >;
                };
        };
};
